
Вот как это выглядит на практике. 

Давайте начнем с левой стороны: сначала мы создаем буфер вершин и текстуру. Синтаксис здесь хороший, и мы объявляем только поля, которые отличаются от значений по умолчанию структуры. 

Если вы посмотрите на левый нижний угол, вы увидите, что мы объявляем материал. Это группа связывания. Группа связывания имеет массив текстур: альбедо, нормаль и свойства. Мы используем здесь список инициализаторов для предоставления массива. Это делает синтаксис очень чистым. И стоит отметить, что этот массив не требует выделения кучи. Список инициализаторов и вся структура дескриптора находятся в стеке. Они никогда не копируются. Мы просто передаем ссылку на них в вызове функции создания ресурса. Это так же быстро, как сырой DX12 или сырой Vulkan. 

С правой стороны вы видите, как мы инициализируем более сложный ресурс. Это немного похоже на json. Мы именованные поля, массивы и поля и массивы внутри друг друга с правильным отступом. Это гораздо проще писать и читать по сравнению с сырым DX12 и Vulkan. И все же мы не платим за время выполнения. Все еще нет выделения памяти или копирования данных. Все это чистые данные стека.
