
И теперь мы готовы обсудить детали реализации.

Для рендеринга нужны текстуры, буферы, шейдеры и несколько других объектов ресурсов. Нам нужен хороший способ хранить эти объекты и гарантировать их безопасность в использовании. 

Современная практика C++ заключается в использовании интеллектуальных указателей, подсчета ссылок и RAII (получение ресурсов — это инициализация). 

Честно говоря, это слишком медленно для нас. Интеллектуальные указатели с подсчетом ссылок связывают время жизни ссылки и резервной памяти вместе. Это приводит к большому количеству небольших выделений памяти. Выделение памяти обходится дорого в современных многопоточных системах. Выделения также случайным образом разбросаны по системной памяти, что ухудшает шаблоны доступа к данным и увеличивает промахи кэша. Копирование интеллектуальных указателей с подсчетом ссылок требует двух атомарных операций (add, sub), поскольку мы находимся в многопоточной системе. Владение может быть разделено между потоками.

Также есть проблемы с безопасностью. Подсчет ссылок делает время жизни объекта неопределенным. Трудно рассуждать об этом. Он может умереть в любом потоке. Такие объекты RAII, как слушатели, вызывают побочные эффекты деструкторов.
