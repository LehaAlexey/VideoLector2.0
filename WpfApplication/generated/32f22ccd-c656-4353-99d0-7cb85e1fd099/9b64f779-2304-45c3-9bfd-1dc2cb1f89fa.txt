
Теперь, когда у нас есть хороший способ создания и хранения ресурсов, нам нужно выделить для них память GPU.

Я предпочитаю использовать временную память, когда это возможно. Временная память не фрагментирует ваши пулы памяти, и ее выделение так же просто, как добавление числа к счетчику.

Мы используем кучи памяти размером 128 МБ в нашем распределителе выступов. Кучи хранятся в кольце. Если распределитель выступов достигает хвоста, мы выделяем новый блок кучи. Как только мы достигаем стабильного состояния, выделения кучи вообще не происходит. Мы создаем платформенно-специфичный буферный дескриптор для каждой создаваемой нами кучи GPU. Этот буферный дескриптор отображает всю кучу. Таким образом, нам не нужно создавать платформенно-специфичные буферные объекты во время выполнения. Наша структура буфера просто содержит индекс кучи и смещение. Очень эффективно создавать их во время выполнения и передавать пользователю.

В качестве дополнительной оптимизации мы предоставляем пользователю конкретный объект распределителя выступов. Он имеет функцию для выделения N байт. Эта функция идеально встраивается в вызывающую функцию. Она просто увеличивает счетчик, а затем проверяет, находится ли счетчик за пределами блока кучи. Эта проверка является предсказуемым переходом. Когда блок заканчивается, мы вызываем виртуальную функцию в API gfx, чтобы получить новый блок временного распределителя. Это происходит только один раз для 128 МБ данных, что делает его очень эффективным.
