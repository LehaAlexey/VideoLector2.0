
Первое, что нам нужно решить, — это уровень абстракции платформы. Какой код специфичен для платформы, а какой — не специфичен для платформы.

Игровые движки обычно ограничивают специфичный для платформы код самыми нижними уровнями стека. Это минимизирует объем кода, специфичного для платформы, и снижает затраты на реализацию и обслуживание. Однако некоторые особенности движка и рендерера имеют тенденцию просачиваться в код платформы самого низкого уровня.

Если посмотреть на мобильные приложения, то специфичный для платформы код, как правило, достигает немного более высоких уровней в стеке. Например, популярный фреймворк приложений Google Flutter разрабатывается несколькими специфичными для платформы командами. Обычно они сначала выпускают новые функции на мобильные устройства, а затем на настольные компьютеры. Android и iOS также не имеют полного паритета функций. Их высокоуровневый код рендеринга отличается на настольных и мобильных платформах, включая Mac и iOS, хотя они обе используют один и тот же API Metal. 

Многие мобильные приложения еще больше увеличивают разделение кода. Часто есть совершенно отдельные команды iOS и Android со своими выделенными базами кода. 
