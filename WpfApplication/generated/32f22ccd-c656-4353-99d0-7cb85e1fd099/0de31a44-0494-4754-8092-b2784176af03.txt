
Последняя тема о проектировании API, которую я хотел обсудить сегодня, — это выполнение вещей с правильной частотой и детализацией.

Большой проблемой при рендеринге кода, как правило, является то, что дорогостоящие операции выполняются со слишком высокой частотой. Это также приводит к увеличению затрат на отслеживание в цикле горячей отрисовки.

В играх много временной согласованности. Вы загружаете игровой мир и медленно изменяете его в каждом кадре. Большая часть данных остается прежней. Кроме того, камера большую часть времени движется медленно. Человеческому мозгу нужна временная согласованность между кадрами, чтобы видеть плавное движение. Это здорово для нас! Мы хотим это использовать!

Давайте посмотрим на все происходящее: Загрузка игрового мира и всех шейдерных PSO происходит в начале. Если у вас более крупный уровень, вы также загружаете текстуры, сетки и материалы при перемещении. Большинство объектов появляются в начале, но разделы уровня могут появляться во время потоковой передачи, враги, добыча, снаряды и т. д. обычно появляются на протяжении всей игры, но не так много в каждом кадре. Единственная действительно высокочастотная операция — это отбраковка всех объектов и отрисовка видимых объектов. Циклы отбраковки и отрисовки — самые чувствительные ко времени циклы во всей вашей кодовой базе.
