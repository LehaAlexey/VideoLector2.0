
Наше решение этой проблемы — полностью отделить все изменения данных от рисования. Все данные готовы до цикла рисования.

Объекты состояния конвейера (PSO) должны быть созданы при запуске приложения или во время загрузки уровня. Создание PSO во время выполнения приводит к подтормаживанию. В нашей философии варианты шейдеров создаются кодерами и техническими художниками и оптимизируются вручную. Их существует лишь ограниченное количество. Это похоже на то, что делает id-Software, и обеспечивает очень хорошую производительность. 

Мы сохраняем дескриптор PSO непосредственно в визуальном компоненте каждого объекта. Нам не нужны поиски в хэш-карте, чтобы получать его в каждом кадре.

Мы предварительно создаем все группы привязок (наборы дескрипторов). Наборы дескрипторов материалов содержат все их текстуры и буфер для данных значений. Мы сохраняем дескриптор группы привязок материалов в визуальном компоненте объектов. Это позволяет избежать поиска в хэш-карте и позволяет эффективно изменять привязки материалов с помощью одной команды Vulkan, Metal и WebGPU.

Важно разделять постоянные и динамические данные. Постоянные данные загружаются при запуске, а дельта обновляется при изменении. Я выступал на эту тему два года назад на REAC 2011. Вы можете обратиться к этой презентации, если хотите узнать больше информации по этой теме.

Динамические данные должны загружаться пакетно один раз за проход вместо использования map/unmap на вызов отрисовки. Глобальные данные должны быть отделены от данных по отрисовке, чтобы минимизировать непроизводительные затраты на полосу пропускания.
